package inventario;

import javax.swing.JOptionPane;

/**
 *
 * @author Abraham Galue
 */

public class Principal extends javax.swing.JFrame {
    public int codigo;
    public String nombre;
    public double precio;
    public int inventario;
    public int nuevoInventario;
    Producto Producto[];
    BaseDatosProductos bdProductos = new BaseDatosProductos();
    
    
    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
        this.tblTabla.setModel(new TableModelProducto(bdProductos.getListaProductos()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")       
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    //GEN-BEGIN:initComponents
    private void initComponents() {
        
        // Variables declaration - do not modify//GEN-BEGIN:variables
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtPrecio = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtInventario = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();
        btnComprar = new javax.swing.JButton();
        btnVender = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        btnInforme = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTabla = new javax.swing.JTable();
        // End of variables declaration//GEN-END:variables

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel1.setText("Sistema de Gesti√≥n de Inventario");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 153, 153));
        jLabel2.setText("Agregar Productos");

        jLabel3.setText("Codigo:");

        txtCodigo.setEditable(false);
        txtCodigo.setEnabled(false);
        txtCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoActionPerformed(evt);
            }
        });

        jLabel4.setText("Nombre:");

        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });

        jLabel5.setText("Precio:");

        txtPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecioActionPerformed(evt);
            }
        });

        jLabel6.setText("Inventario:");

        txtInventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInventarioActionPerformed(evt);
            }
        });

        btnAgregar.setBackground(new java.awt.Color(248, 250, 250));
        btnAgregar.setText("Agregar");
        //btnAgregar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnComprar.setBackground(new java.awt.Color(58, 108, 77));
        btnComprar.setForeground(new java.awt.Color(255, 255, 255));
        btnComprar.setText("Comprar");
        btnComprar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComprarActionPerformed(evt);
            }
        });

        btnVender.setBackground(new java.awt.Color(149, 7, 10));
        btnVender.setForeground(new java.awt.Color(255, 255, 255));
        btnVender.setText("Vender");
        btnVender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVenderActionPerformed(evt);
            }
        });

        btnActualizar.setBackground(new java.awt.Color(51, 88, 239));
        btnActualizar.setForeground(new java.awt.Color(255, 255, 255));
        btnActualizar.setText("Actualizar");
        btnActualizar.setBorder(new javax.swing.border.EmptyBorder(0, 0, 0, 0));
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnEliminar.setBackground(new java.awt.Color(51, 88, 239));
        btnEliminar.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminar.setText("Eliminar");
        //btnEliminar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(153, 153, 153));
        jLabel7.setText("* Seleccione el dato de la tabla que desea Actualizar o Eliminar.");

        btnInforme.setText("Informe");
        btnInforme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInformeActionPerformed(evt);
            }
        });

        jLabel8.setText("Lista de Productos");

        tblTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblTabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblTabla);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(104, 104, 104))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(2, 2, 2))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel6))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(jLabel3)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(btnComprar)
                                .addGap(61, 61, 61)
                                .addComponent(btnVender)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(38, 38, 38)))
                                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtCodigo)
                                    .addComponent(txtNombre)
                                    .addComponent(txtPrecio)
                                    .addComponent(txtInventario)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(btnInforme)))))
                .addGap(81, 81, 81))
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(74, 74, 74))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtInventario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnVender)
                    .addComponent(btnComprar))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInforme)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(135, Short.MAX_VALUE))
        );

        pack();
    }//
    // </editor-fold>
    //GEN-END:initComponents                                                                       

    private void txtCodigoActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

    private void txtPrecioActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

    private void txtInventarioActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
    }                                             

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {                                            
        if (validarDatos()) {
            bdProductos.borrar(new Producto(codigo, nombre, precio, inventario));
            this.tblTabla.setModel(new TableModelProducto(bdProductos.getListaProductos()));
            limpiarDatos();
            JOptionPane.showMessageDialog(this,"Producto eliminado Exitosamente", "Confirmacion", 1);
        } else {
            JOptionPane.showMessageDialog(this,"Alguno de los valores digitados esta vacio o es erroneo", "Advertencia", 2);
        }
    }                                           

    private void btnInformeActionPerformed(java.awt.event.ActionEvent evt) {                                           
        JOptionPane.showMessageDialog(this, bdProductos.generarInforme(), "Productos M√°s Costosos", 1);
    }                                          

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {                                           
        if (validarDatos()) {
            if (!bdProductos.verificarExistencias(nombre)) {
                    if (codigo == 0) {
                if (nombre.matches("[a-zA-Z]+")) {
                        int codigoAux = bdProductos.ultimoCodigo() + 1;
                        bdProductos.agregar(new Producto(codigoAux, nombre, precio, inventario));
                        this.tblTabla.setModel(new TableModelProducto(bdProductos.getListaProductos()));
                        limpiarDatos();
                        JOptionPane.showMessageDialog(this,"Producto Agregado Exitosamente", "Confirmacion", 1);
                    } else {
                        JOptionPane.showMessageDialog(this,"El nombre no puede contener numeros", "Advertencia", 2);
                    }
                } else {
                    JOptionPane.showMessageDialog(this,"Imposible agregar! Esta accion es permitida para Actualizar o Borrar", "Advertencia", 2);
                }
            } else {
                JOptionPane.showMessageDialog(this,"El producto ya existe", "Advertencia", 2);
            }
        } else {
            JOptionPane.showMessageDialog(this,"Alguno de los valores digitados esta vacio o es erroneo", "Advertencia", 2);
        }
    }                                          

    private void tblTablaMouseClicked(java.awt.event.MouseEvent evt) {                                      
        Producto producto = ((TableModelProducto) this.tblTabla.getModel()).detalle(this.tblTabla.getSelectedRow());
        this.txtCodigo.setText(String.valueOf(producto.getCodigo()));
        this.txtNombre.setText(producto.getNombre());
        this.txtPrecio.setText(String.valueOf(producto.getPrecio()));
        this.txtInventario.setText(String.valueOf(producto.getInventario()));
    }                                     

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {                                              
        if (validarDatos() && inventario >= 0) {
            bdProductos.actualizar(new Producto(codigo, nombre, precio, inventario));
            this.tblTabla.setModel(new TableModelProducto(bdProductos.getListaProductos()));
            limpiarDatos();
            JOptionPane.showMessageDialog(this,"Producto actualizado Exitosamente", "Confirmacion", 1);
        } else {
            JOptionPane.showMessageDialog(this,"Alguno de los valores digitados esta vacio o es erroneo", "Advertencia", 2);
        }
    }                                             
    
    private void btnComprarActionPerformed(java.awt.event.ActionEvent evt) {                                           
        Producto producto = ((TableModelProducto) this.tblTabla.getModel()).detalle(this.tblTabla.getSelectedRow());
        int actualInventario = Integer.parseInt(String.valueOf(producto.getInventario()));
        //nuevoInventario = actualInventario - inventario;
        
        if (validarDatos() && inventario > 0 && inventario <= actualInventario) {
            if (nuevoInventario >= 0) {
                nuevoInventario = actualInventario - inventario;
                //bdProductos.agregar(new Producto(codigo, nombre, precio, nuevoInventario));
                bdProductos.comprarProducto(producto, nuevoInventario);
                this.tblTabla.setModel(new TableModelProducto(bdProductos.getListaProductos()));
                limpiarDatos();
                //bdProductos.actualizar(new Producto(codigo, nombre, precio, nuevoInventario));
                //this.tblTabla.setModel(new TableModelProducto(bdProductos.getListaProductos()));
                //limpiarDatos();
                JOptionPane.showMessageDialog(this,"Producto comprado Exitosamente", "Confirmacion", 1);
            } else {
                JOptionPane.showMessageDialog(this,"No tenemos el suficiente inventario", "Advertencia", 2);
            }
        } else {
            JOptionPane.showMessageDialog(this,"Alguno de los valores digitados esta vacio o es erroneo", "Advertencia", 2);
        }
    }           
    
    private void btnVenderActionPerformed(java.awt.event.ActionEvent evt) {                                           
        Producto producto = ((TableModelProducto) this.tblTabla.getModel()).detalle(this.tblTabla.getSelectedRow());
        int actualInventario = Integer.parseInt(String.valueOf(producto.getInventario()));
        //nuevoInventario = actualInventario - inventario;
        
        if (validarDatos() && inventario > 0) {
            if (nuevoInventario >= 0) {
                nuevoInventario = actualInventario + inventario;
                //bdProductos.agregar(new Producto(codigo, nombre, precio, nuevoInventario));
                bdProductos.comprarProducto(producto, nuevoInventario);
                this.tblTabla.setModel(new TableModelProducto(bdProductos.getListaProductos()));
                limpiarDatos();
                //bdProductos.actualizar(new Producto(codigo, nombre, precio, nuevoInventario));
                //this.tblTabla.setModel(new TableModelProducto(bdProductos.getListaProductos()));
                //limpiarDatos();
                JOptionPane.showMessageDialog(this,"Producto vendido Exitosamente", "Confirmacion", 1);
            } else {
                JOptionPane.showMessageDialog(this,"No tenemos el suficiente inventario", "Advertencia", 2);
            }
        } else {
            JOptionPane.showMessageDialog(this,"Alguno de los valores digitados esta vacio o es erroneo", "Advertencia", 2);
        }
    }                                          

    public boolean validarDatos() {
        try {    
            codigo = Integer.parseInt("".equals(txtCodigo.getText()) ? "0" : txtCodigo.getText());
            nombre = txtNombre.getText();
            precio = Double.parseDouble(txtPrecio.getText());
            inventario = Integer.parseInt(txtInventario.getText());
            return true;            
        } catch (Exception e) {
            return false;
        }
    }
    
    public void limpiarDatos() {
        this.txtCodigo.setText("");
        this.txtNombre.setText("");
        this.txtPrecio.setText("");
        this.txtInventario.setText("");
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnComprar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnInforme;
    private javax.swing.JButton btnVender;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tblTabla;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtInventario;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPrecio;
    // End of variables declaration                   
}
